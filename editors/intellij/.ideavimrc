" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


" Space as leader key
nnoremap <SPACE> <Nop>
let mapleader=" "

" Options
set	clipboard+=unnamedplus
set	fileencoding="utf-8"
set	hlsearch
set	ignorecase
set	smartcase
set	smartindent
set	splitbelow
set	splitright
set	noswapfile
set	undofile
set	undolevels=10000
set	undoreload=10000
set	expandtab
set	shiftwidth=4
set	tabstop=4
set	softtabstop=4
set	cursorline
set	number
set	relativenumber
set	wrap
set	nolinebreak
set	scrolloff=8
set	sidescrolloff=8
set showmode

" Recommanded ideavim settings
set ideajoin
set ideaput
set ideamarks

" Plugins
set surround
set NERDTree
set commentary
set highlightedyank

" Tab navigation keymaps
nmap <A-q> :tabclose<CR>

" Window navigation keymaps
nmap <Leader>v :vsplit<CR>
nmap <Leader>h :split<CR>
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
nmap <leader>q :q<CR>

" Code navigation keymaps
nmap gb <Action>(Back)
nmap gf <Action>(Forward)
nmap gd <Action>(GotoDeclaration)
nmap gtd <Action>(GotoTypeDeclaration)
nmap gu <Action>(FindUsages)
nmap gl <Action>(ShowErrorDescription)
nmap gi <Action>(GotoImplementation)
nmap gt <Action>(GotoTest)
nmap gcc <Action>(CommentByLineComment)

" Other windows access
nmap <Leader>e :NERDTreeFocus<CR>
nmap <Leader>o :NERDTreeToggle<CR>
nmap <Leader>s <Action>(FileStructurePopup)
nmap <Leader>ff <Action>(SearchEverywhere)
nmap <Leader>fg <Action>(FindInPath)
nmap <Leader>fr <Action>(RenameFile)
nmap <Leader>r :registers<cr>
vmap <Leader>r :registers<cr>
nmap <Leader>al :actionlist<space>
nmap <Leader>wp <Action>(ActivateProblemsViewToolWindow)
nmap <Leader>wr <Action>(ActivateRunToolWindow)
nmap <Leader>wg <Action>(ActivateVersionControlToolWindow)
nmap <Leader>wc <Action>(ActivateCommitToolWindow)
nmap <Leader>wd <Action>(ActivateDatabaseToolWindow)
nmap <Leader>wn <Action>(ActivateNotificationsToolWindow)
nmap <Leader>wnc <Action>(ClearAllNotifications)
nmap <Leader>t <Action>(ActivateTerminalToolWindow)

" Perform actions in code
nmap <Leader>ca <Action>(ShowIntentionActions)
nmap <Leader>cr <Action>(RenameElement)
nmap <Leader>cf <Action>(ShowReformatFileDialog)
nmap <Leader>cg <Action>(Generate)
vmap <Leader>cv <Action>(IntroduceVariable)
vmap <Leader>cm <Action>(ExtractMethod)

" Save current file with C-s
nmap <A-w> :w<CR>
nmap zz :wq<CR>

" Debug keymaps
nmap <Leader>db <Action>(ToggleLineBreakpoint)
nmap <Leader>de <Action>(EditBreakpoint)

" Tests keymaps
nmap <Leader>rt <Action>(RunClass)
nmap <Leader>dt <Action>(DebugClass)

" Selects all editor content
nnoremap <C-A> gg<S-v>G

vmap <c-s-j> <Action>(EditorDuplicateLines)
vmap <c-s-k> "ry`>"rpgv

" Keymaps to move lines of code up and down
nmap <A-j> :m .+1<CR>==
nmap <A-k> :m .-2<CR>==
vmap <A-j> :m '>+1<CR>gv=gv
vmap <A-k> :m '<-2<CR>gv=gv

" Stay in visual mode after (un)indenting
vmap < <gv^
vmap > >gv^

" Reload .ideavimrc without restarting the IDE
nmap <Leader>ir <Action>(IdeaVim.ReloadVimRc.reload)

nmap <Leader>m <Action>(EditorSplitLine)

" NERDTree keymaps : open/close a node with l/h
let g:NERDTreeMapActivateNode="l"
let g:NERDTreeMapCloseDir="h"

nmap vv V

nmap zk <Action>(MethodUp)
nmap zj <Action>(MethodDown)
nmap gq <Action>(ReformatCode)

nmap <leader>gg <Action>(ActivateCommitToolWindow)
" Don't use Ex mode, use Q for formatting.
" map Q gq
nmap <leader>. <action>(RecentFiles)

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
